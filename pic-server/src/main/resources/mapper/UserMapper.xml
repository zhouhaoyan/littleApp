<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.megatron.picserver.pojo.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="open_id" property="openId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="nick_name" property="nickName" jdbcType="VARCHAR" />
    <result column="pic_url" property="picUrl" jdbcType="VARCHAR" />
    <result column="follow_num" property="followNum" jdbcType="INTEGER" />
    <result column="collect_num" property="collectNum" jdbcType="INTEGER" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="sex" property="sex" jdbcType="INTEGER" />
    <result column="local" property="local" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="INTEGER" />
    <result column="session_key" property="sessionKey" jdbcType="VARCHAR" />
    <result column="token" property="token" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, open_id, name, nick_name, pic_url, follow_num, collect_num, description, type, 
    sex, local, level, session_key, token, status, update_time, create_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.megatron.picserver.pojo.User" >
    insert into user (id, open_id, name, 
      nick_name, pic_url, follow_num, 
      collect_num, description, type, 
      sex, local, level, 
      session_key, token, status, 
      update_time, create_time)
    values (#{id,jdbcType=BIGINT}, #{openId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{picUrl,jdbcType=VARCHAR}, #{followNum,jdbcType=INTEGER}, 
      #{collectNum,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{sex,jdbcType=INTEGER}, #{local,jdbcType=VARCHAR}, #{level,jdbcType=INTEGER}, 
      #{sessionKey,jdbcType=VARCHAR}, #{token,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.megatron.picserver.pojo.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="openId != null" >
        open_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="nickName != null" >
        nick_name,
      </if>
      <if test="picUrl != null" >
        pic_url,
      </if>
      <if test="followNum != null" >
        follow_num,
      </if>
      <if test="collectNum != null" >
        collect_num,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="local != null" >
        local,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="sessionKey != null" >
        session_key,
      </if>
      <if test="token != null" >
        token,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="openId != null" >
        #{openId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null" >
        #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="followNum != null" >
        #{followNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null" >
        #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="local != null" >
        #{local,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=INTEGER},
      </if>
      <if test="sessionKey != null" >
        #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        #{token,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.megatron.picserver.pojo.User" >
    update user
    <set >
      <if test="openId != null" >
        open_id = #{openId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="nickName != null" >
        nick_name = #{nickName,jdbcType=VARCHAR},
      </if>
      <if test="picUrl != null" >
        pic_url = #{picUrl,jdbcType=VARCHAR},
      </if>
      <if test="followNum != null" >
        follow_num = #{followNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null" >
        collect_num = #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="local != null" >
        local = #{local,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=INTEGER},
      </if>
      <if test="sessionKey != null" >
        session_key = #{sessionKey,jdbcType=VARCHAR},
      </if>
      <if test="token != null" >
        token = #{token,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.megatron.picserver.pojo.User" >
    update user
    set open_id = #{openId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      pic_url = #{picUrl,jdbcType=VARCHAR},
      follow_num = #{followNum,jdbcType=INTEGER},
      collect_num = #{collectNum,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      sex = #{sex,jdbcType=INTEGER},
      local = #{local,jdbcType=VARCHAR},
      level = #{level,jdbcType=INTEGER},
      session_key = #{sessionKey,jdbcType=VARCHAR},
      token = #{token,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>